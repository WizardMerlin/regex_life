其他符号,大概是指:
1. "\" 转义字符
2. "()" 小括号
3. "|" 或. 子表达式连接 (一般用在小括号里面)
3. "\s"和"\S" 空白字符和非空白字符
4. "\w"和"\W" 表示[a-zA-Z0-9]或者[^a-zA-Z0-9]
5. "\d"和"\D" 表示[0-9]或者[^0-9]  ---有些regex引擎可能不识别
6. posix字符, 例如[:alpha:]表示[a-zA-Z]
   (但是不通用,所以不列举了)
  


1. 转义字符
转义字符: 特殊函数转普通或者普通含义转特殊.

特殊转普通:
最常见的情况, 点号; regex中表示匹配任意一个.
"(.*)" 表示匹配所有(capture all)
如果你要用本来的含义,就需要转义"\."

普通转特殊:
"n"  --> "\n"

但是有一些转义, 在regex中和平常的转义意义不太一样, 最常见的:
"\b"平常的转义表示退格, 而在regex, 放在单词头表示"\<", 放在单词尾巴表示"\>".


2. 小括号 (这个是重点)
两种含义:
2.1. 划分为整个单元(这样就可以用其他符号做限定)
例如:
(\w\s)+   --- 匹配至少一个英文字母或者数字的串(对整体限定次数)

另外一个例子:
"^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\."

可以修改一下成:
"^([0-9]{1,3}\.){3}"

2.2. 分组 (除了匹配整体正则式, 还要匹配sub括号中的正则表达式)
"(a(bc))"
pattern "abc"匹配一次, 然后(同时)"bc"匹配一次.

举一个简单的例子: (参见others.sh)
数据如下:
Jan 2015
May 2016
Aug 2017

这个匹配起来比较简单: "\w+\s[0-9]+"

但是现在的要求, 除了识别年月, 还要单独识别年;
数据变成了:
Jan 2015
May 2016
Aug 2017

此时简单的写法,就是写一个sub-group,满足整体要求的同时,也要满足内部分组的要求.
"(\w+\s([0-9]))"

(但是匹配的子组(sub-group)不会显示出来; 只会显示整体的匹配结果)


3. "|"
表示同时匹配, "aa|bb"表示匹配"aa"或者"bb".
更多例子:
"n(o|ew)"  --- "no" 或者 "new"
"(xxx|yyy)" ---  "xxx" 或者 "yyy"

"I like (apple | orange)" ---- "I like apple" 或者 "I like orange"


4. "\w"和"\W"
"\w"可以匹配任意一个字符[a-zA-Z]以及数字[0-9]
"\W"表示匹配除了字符和数字之外的char, 等效于[^a-zA-Z0-9]

5. "\s"和"\S"
"\s"可以表示任意一个空白字符,包括:
"\n"换行符
"\r"回车符
"\t"水平制表符
"\v"追至制表符
"\O"空值符
"\b"退格  (在regex表达式中表示不一样)

"\S"则表示任意"非空白字符".