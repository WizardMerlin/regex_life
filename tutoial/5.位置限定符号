主要有"\<", " \>","\b", "\B"("\b"在regex中不是退格)和 "^", "$"
稍微注意一下, "^"放在"[]"外面和放在"[]"里面意义不一样.
("\b"放在匹配头,相当于"\<",放在匹配尾,相当于"\>")
("\B"匹配非单词开头和结尾的字符串)


1. "\<"和"\>"

"\<" 和 "\>"都是边界符, 限定/匹配字符串的开始和结束.

例如: 匹配以"abc"开头的字符串,例如"abc", "abcd", "abcde", 但是不匹配"cabc","cabcd"之类的:
grep -E "\<abc" test.txt


"\>"的限定类似, 匹配"abc"结尾的字符串, 例如"abc", "cabc", 但是不匹配"abcd", "abcde"
grep -E "abc\>" test.txt

(具体参考: position.sh)


那么"abc"既不再开头, 又不在结尾呢?(例如: "xxxabcyyy")
可以这样写:
grep -E ".+abc.+" test.txt
grep -E "\Babc\B" test.txt


精确匹配"abc"不需要其他任何字符
grep -E "\<abc\>" test.txt


2. "^"和"$"
"^"和"$"功能类似, 但是它匹配的范围是一行, 例如匹配"abc"
而"\<\>"匹配是按单词来的

例如, 有一行是这么写的 " abc ", 那么
grep -E "^abc$" test.txt 匹配不上(行开头必须是abc, 此时行开头是空格)
grep -E "\<abc\>" test.txt 可以匹配上(单词开头必须是abc)


但是当你需要匹配空行的时候,就可以用它了:
grep -E "^$" test.txt | wc -c


